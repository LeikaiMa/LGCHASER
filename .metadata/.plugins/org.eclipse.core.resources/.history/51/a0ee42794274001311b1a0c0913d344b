package mergeKSortedLists;

import java.util.ArrayList;

public class ConciseMergeSort {
	public ListNode mergeKLists(ArrayList<ListNode> lists) {
		if (lists.size() == 0) {
			return null;
		}
		
		int last = lists.size() - 1;
		
		while (last > 0) {
			int cur  = 0;
			while (cur <  last) {
				lists.set(cur, merge(lists.get(cur), lists.get(last)));
				last--;
				cur++;
			}
		}
	}
	
	private ListNode merge(ListNode head1, ListNode head2) {
		ListNode dummy = new ListNode(0);
		ListNode prev = dummy;
		
		while (head1 != null && head2!= null) {
			if (head1.val <= head2.val) {
				prev.next = head1;
				head1 = head1.next;
				prev = prev.next;
			} else {
				prev.next = head2;
				head2 = head2.next;
				prev = prev.next;
			}
		}
		
		if (head1 == null) {
			prev.next = head2;
		} else {
			prev.next = head1;
		}
		return dummy.next;
	}
}
