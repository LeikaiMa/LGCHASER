package surroundedSquare;

public class BruteForce {
	Subsquare findSquare(int[][] matrix) {
		for (int i = matrix.length; i >= 1; i--) {
			Subsquare square = findSquareWithSize(matrix, i);
			if (square != null) {
				return square;
			}
		}
		return null;
	}
	
	Subsquare findSquareWithSize(int[][] matrix, int squareSize) {
		int count = matrix.length - squareSize + 1;
		
		for (int row = 0; row < count; row++) {
			for (int col = 0; col < count; col++) {
				if (isSquare(matrix, row, col, squareSize)) {
					return new Subsquare(row, col, squareSize);
				}
			}
		}
		
		return null;
	}
	
	boolean isSquare(int[][] matrix, int row, int col, int size) {
		for (int j = 0; j < size; j++) {
			if (matrix[row][col + j] == 1) {
				return false;
			}
			if (matrix[row + size - 1][col + j] == 1) {
				return false;
			}
		}
	}
}
