package implementStrStr;

public class KMPVersion {
	public String strStr(String haystack, String needle) {
		if (haystack.length() < needle.length()) {
			return null;
		}

		if (needle.length() == 0) {
			return haystack;
		}
		char[] h = haystack.toCharArray();
		char[] n = needle.toCharArray();

		int[] next = getNext(needle);
		int i = 0;
		int j = 0;

		while (i < h.length && j < n.length) {
			if (j == -1 || h[i] == n[j]) {
				i++;
				j++;
			} else {
				j = next[j];
			}
		}

		if (j == n.length) {
			return haystack.substring(i - j);
		} else {
			return null;
		}
	}

	public int[] getNext(String needle) {
		char[] p = needle.toCharArray();
		int[] next = new int[p.length];

		next[0] = -1;
		int j = 0;
		int k = -1;

		while (j < p.length - 1) {
			if (k == -1 || p[j] == p[k]) {
				if (p[++j] == p[++k]) {
					next[j] = next[k];
				} else {
					next[j] = k;
				}
			} else {
				k = next[k];
			}
		}

		return next;
	}
}
