package longestRectangleInHistogram;

import java.util.Stack;
// 求直方图里面最大的面积，本质上是一个stack 的递增维护。
public class ONWithStack {
	public static  int largestRectangleArea(int[] height) {
		if (height == null || height.length == 0) {
			return 0;
		}
		
		Stack<Integer> heights = new Stack<Integer>();
		Stack<Integer> indexes = new Stack<Integer>();
		
		heights.push(height[0]);
		indexes.push(0);
		int max = 0;
		for (int i = 1; i < height.length; i ++ ) {
			if (height[i] > heights.peek()) {
				heights.push(height[i]);
				indexes.push(i);
			} else if (height[i] < heights.peek()) {
				int lastIndex = i;
				while (!heights.isEmpty() && heights.peek() >= height[i]) {
					lastIndex = indexes.peek();
					max = Math.max(heights.pop() * (i - indexes.pop()), max);
				}
				heights.push(height[i]);
				indexes.push(lastIndex);
			}
		}
		
		while (!heights.isEmpty()) {
			max = Math.max(heights.pop() *(height.length - indexes.pop()), max);
		}
		
		return max;
	}
	
	public static void main(String[] args) {
		int[] height = {2,1,5,6,2,3};
		System.out.println(largestRectangleArea(height));
	}
}
