package mergeIntervals;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class SortByComparator {
	public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
		ArrayList<Interval> newIntervals = new ArrayList<Interval>();
		if (intervals.isEmpty()) {
			return newIntervals;
		}

		Collections.sort(intervals, new Comparator<Interval>() {
			public int compare(Interval a, Interval b) {
				return a.start > b.start ? 1 : (a.start == b.start ? 0 : -1);
			}
		});

		Interval oldInterval = intervals.get(0);

		for (int i = 1; i < intervals.size(); i++) {
			Interval tmp = intervals.get(i);

			if (tmp.start > oldInterval.end) {
				newIntervals.add(oldInterval);
				oldInterval = tmp;
			} else {
				oldInterval = new Interval(oldInterval.start, Math.max(
						oldInterval.end, tmp.end));
			}
		}

		newIntervals.add(oldInterval);

		return newIntervals;
	}
}
