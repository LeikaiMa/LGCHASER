package minPath;

import java.util.LinkedList;
import java.util.Queue;

public class BFS {
	public static int minDepth(TreeNode root) {
		if (root == null) {
			return 0;
		}

		Queue<TreeNode> queue = new LinkedList<TreeNode>();
		queue.add(root);
		int depth = 0;
		while (true) {
			depth++;
			Queue<TreeNode> tmp = new LinkedList<TreeNode>();
			for (TreeNode node : queue) {
				if (node.left == null && node.right == null) {
					return depth;
				} else if (node.left != null) {
					tmp.add(node.left);
				} else {
					tmp.add(node.right);
				}
			}
			queue = tmp;
		}
	}
}
