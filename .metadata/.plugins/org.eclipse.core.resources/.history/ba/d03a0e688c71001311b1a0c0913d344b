package wordLadder;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

public class UseHashSet {
	public static int ladderLength(String start, String end,
			HashSet<String> dict) {
		if (start.equals(end)) {
			return 0;
		}
		if (dict.contains(end)) {
			return 1;
		}

		HashSet<String> visited = new HashSet<String>();
		ArrayList<String> processing = new ArrayList<String>();
		processing.add(start);
		int len = 1;
		while (!processing.isEmpty()) {
			len++;
			ArrayList<String> tmp = new ArrayList<String>();
			for (String s : processing) {
				
					replace(s, visited, tmp);
				
			}
			
			
			processing = tmp;
			
		}
		return 0;
	}

	private static void replace(String s, HashSet<String> visited,
			ArrayList<String> tmp) {

		for (int i = 0; i < s.length(); i++) {
			char[] word = s.toCharArray();
			for (char c = 'a'; c <= 'z'; c++) {
				word[i] = c;
				String candidate = new String(word);
				if (!visited.contains(candidate)) {
					visited.add(candidate);
					tmp.add(candidate);
				}
			}
		}
	}

	public static void main(String[] args) {
		String start = "hit";
		String end = "cog";
		HashSet<String> dict = new HashSet<String>();
		dict.add("hot");
		dict.add("dot");
		dict.add("dog");
		dict.add("lot");
		dict.add("log");
		System.out.println(ladderLength(start, end, dict));
	}
}
