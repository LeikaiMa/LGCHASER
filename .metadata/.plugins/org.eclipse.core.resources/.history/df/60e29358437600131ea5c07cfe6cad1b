package provideLockNoDeadLock;

import java.util.HashMap;
import java.util.LinkedList;

import org.omg.CORBA.INTERNAL;

public class LockFactory {
	private static LockFactory instance;
	
	private int numberOfLocks = 5;
	
	private LockNode[] locks;
	
	private HashMap<Integer, LinkedList<LockNode>> lockOrder;
	
	private LockFactory(int count) {
		
	}
	
	public static LockFactory getInstance() {
		return instance;
	}
	
	public static synchronized LockFactory initialize(int count) {
		if (instance == null) {
			instance =  new LockFactory(count);
		}
		
		return instance;
	}
	
	public boolean hasCycle(HashMap<Integer, Boolean> touchedNodes, int[] resourcesInOrder) {
		
	}
}
