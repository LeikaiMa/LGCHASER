package uniqueBSTII;

import java.util.ArrayList;

public class UniqueBST {
	public ArrayList<TreeNode> generateTrees(int n) {

		return generateTreesHelper(1, n);
	}

	private ArrayList<TreeNode> generateTreesHelper(int start, int end) {
		ArrayList<TreeNode> result = new ArrayList<TreeNode>();
		if (start > end) {
			result.add(null);
		} else if (start == end) {
			result.add(new TreeNode(start));
		} else {
			for (int i = start; i <= end; i++) {

				ArrayList<TreeNode> lefts = generateTreesHelper(start, i - 1);
				ArrayList<TreeNode> rights = generateTreesHelper(i + 1, end);
				for (TreeNode left : lefts) {
					for (TreeNode right : rights) {
						TreeNode node = new TreeNode(i);
						node.left = left;
						node.right = right;
						result.add(node);
					}
				}
			}
		}
		return result;
	}

}
