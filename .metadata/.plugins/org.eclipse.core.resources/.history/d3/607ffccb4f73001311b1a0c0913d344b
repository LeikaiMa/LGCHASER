package searchInRotatedArrayII;

public class CustomBinarySearch {
	public boolean search(int[] A, int target) {
		if (A == null || A.length == 0) {
			return false;
		}

		int low = 0;
		int high = A.length - 1;

		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (A[mid] == target) {
				return true;
			}

			if (A[low] < A[mid]) {
				if (target >= A[low] && target < A[mid]) {
					high = mid -1;
				} else {
					low = mid + 1;
				}
			} else if (A[low] > A[mid]) {
				if (target <= A[high] && target > A[mid])
				{
					}
				}
		}
		return false;
	}
}
