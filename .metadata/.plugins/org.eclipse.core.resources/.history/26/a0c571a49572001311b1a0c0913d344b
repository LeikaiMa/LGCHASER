package convertSortedListToBST;

public class ListOnly {
	public TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}

		int len = 0;
		ListNode node = head;
		while (node != null) {
			len++;
			node = node.next;
		}

		return (sortedListToBSTHelper(head, 0, len - 1)).treeNode;

	}

	private Element sortedListToBSTHelper(ListNode head, int start, int end) {
		if (start > end) {
			return null;
		} else if (start == end) {
			return new Element(head, new TreeNode(head.val));
		} else {
			int mid = (start + end) / 2;
			Element left = sortedListToBSTHelper(head, start, mid - 1);
			ListNode p = left.listNode.next;
			Element parent = new Element(p, new TreeNode(p.val));
		}

	}

	public class Element {
		ListNode listNode;
		TreeNode treeNode;

		public Element(ListNode l, TreeNode t) {
			listNode = l;
			treeNode = t;
		}
	}

}
