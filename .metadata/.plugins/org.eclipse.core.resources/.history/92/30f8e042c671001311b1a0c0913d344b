package nQueensII;

public class BitManiputlation {
	// public static int upper = 0;
	// public static int count = 0;

	public static int totalNQueens(int n) {
		int count = 0;
		int upper = (1 << n) - 1;
		int[] paras = new int[2];
		paras[0] = count;
		paras[1] = upper;
		System.out.println(upper);
		Queen(0, 0, 0, paras);
		return paras[0];
	}

	 private static void Queen(int row, int ld, int rd, int[] paras) {
	 int upper= paras[1];
		 int pos, p;
	 if (row != upper) {
	 pos = upper & (~(row | ld | rd));
	 while (pos != 0) {
	 p = pos & -pos;
	 pos = pos - p;
	 Queen(row + p, (ld + p) << 1, (rd + p) >> 1, paras);
	 }
	 } else {
	 paras[0]++;
	 }
	 }


	public static void main(String[] args) {
		System.out.println(totalNQueens(1));
	}
}
