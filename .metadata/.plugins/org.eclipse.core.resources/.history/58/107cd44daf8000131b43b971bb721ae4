package recoverBinarySearchTree;

public class CheckTwoInorderPlaces {
	public void recoverTree(TreeNode root) {
		if (root == null) {
			return;
		}

		TreeNode[] buffer = new TreeNode[3];

		helper(root, buffer);

		swap(buffer[1], buffer[2]);
	}

	private void helper(TreeNode root, TreeNode[] buffer) {
		if (root.left != null) {
			helper(root.left, buffer);
		}

		if (buffer[0] != null) {
			if (buffer[0].val > root.val) {
				if (buffer[1] == null) {
					buffer[1] = buffer[0];
				}
				buffer[2] = root;
			}
		}
		buffer[0] = root;
		if (root.right != null) {
			helper(root.right, buffer);
		}
	}

	private void swap(TreeNode t1, TreeNode t2) {
		int tmp = t1.val;
		t1.val = t2.val;
		t2.val = tmp;
	}
}
