package mostWaterContainer;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;
import java.util.TreeMap;

public class ContainerWithMostWater {
	public static int maxArea(int[] height) {
		if (height == null) {
			return 0;
		}
		TreeMap<Integer, ArrayList<Integer>> containers = new TreeMap<Integer, ArrayList<Integer>>(
				Collections.reverseOrder());
		int maxArea = Integer.MIN_VALUE;
		int max = Integer.MIN_VALUE;
		int min = Integer.MAX_VALUE;
		for (int i = 0; i < height.length; i++) {
			if (!containers.containsKey(height[i])) {
				ArrayList<Integer> heights = new ArrayList<Integer>();
				heights.add(i);
				containers.put(height[i], heights);
			} else {
				ArrayList<Integer> heights = containers.get(height[i]);
				heights.add(i);
			}
		}

		Set<Integer> keys = containers.keySet();
		for (Integer key : keys) {
			ArrayList<Integer> heights = containers.get(key);
			Collections.sort(heights);
			max = Math.max(heights.get(heights.size() - 1), max);
			min = Math.min(heights.get(0), min);

			int area = key * (max - min);
			if (maxArea < area) {
				maxArea = area;
			}
		}
		return maxArea;
	}
	
	public static void main(String[] main) {
		
	}
}
