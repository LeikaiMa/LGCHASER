package restoreIPAddress;

import java.util.ArrayList;

public class PiecesByPieces {
	public ArrayList<String> restoreIpAddresses(String s) {
        ArrayList<String> results = new ArrayList<String>();
        ArrayList<Integer> result = new ArrayList<Integer>();
        if (s == null || s.length() < 4) {
            return results;
        }
        helper(s, 0, results, result);
        
        return results;
    }
    
    public void helper(String s, int start, ArrayList<String> results, ArrayList<Integer> result) {
        if (result.size() == 4 && start == s.length()) {
            StringBuffer sb = new StringBuffer();
            for (int ip : result) {
                sb.append(ip);
                sb.append('.');
            }
            
            results.add(sb.substring(0, sb.length() - 1));
        } else if (result.size() < 4) {
            for (int i = 1; i <= 3; i++) {
                if (start + i <= s.length()) {
                    String tmp = s.substring(start, start + i);
                    if (i != 1 && tmp.charAt(0) == '0') {
                        continue;
                    }
                    
                    int ip = Integer.valueOf(tmp);
                    if (ip >= 0 && ip <= 255) {
                        result.add(ip);
                        helper(s, start + i, results, result);
                        result.remove(result.size() - 1);
                    }
                }
            }
        }
     }
}
