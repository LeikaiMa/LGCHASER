package binaryTreeMaximumPathSum;

public class LeftRightArcAndSelf {
	public int maxPathSum(TreeNode root) {
		int[] maxSum = new int[1];
		maxSum[0] = Integer.MIN_VALUE;
		helper(root, maxSum);
		return maxSum[0];
	}

	public int helper(TreeNode root, int[] maxSum) {
		if (root == null) {
			return 0;
		}

		int cur = root.val;
		int left = helper(root.left, maxSum);
		int right = helper(root.right, maxSum);

		int side = Math.max(cur, Math.max(left, right) + cur);

		int arc = left + cur + right;

		maxSum[0] = Math.max(maxSum[0], Math.max(arc, side));
		return side;
	}
}
