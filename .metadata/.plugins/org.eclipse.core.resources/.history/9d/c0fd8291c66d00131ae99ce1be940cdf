package wordBreakII;

import java.util.ArrayList;
import java.util.Set;

public class DP {
	public static ArrayList<String> wordBreak(String s, Set<String> dict) {
		ArrayList<String> result = new ArrayList<String>();
		if (s == null || s.isEmpty()) {
			return result;
		}

		boolean[][] dp = new boolean[s.length()][s.length() + 1];
		for (int len = 1; len <= s.length(); len++) {
			for (int start = 0; start <= s.length() - len; start++) {
				int end = start + len;
				String subString = s.substring(start, end);
				if (dict.contains(subString)) {
					dp[start][len] = true;
				} else {
					for (int m = 1; m < len; m++) {
						if (dp[start][m] && dp[start + m][len - m]) {
							dp[start][len] = true;
							break;
						}
					}
				}
			}
		}
		
		if (!dp[0][s.length()]) {
			return result;
		} else {
			wordBreakHelper(s, dict, result);
			return result;
		}
	}
	
	
}
