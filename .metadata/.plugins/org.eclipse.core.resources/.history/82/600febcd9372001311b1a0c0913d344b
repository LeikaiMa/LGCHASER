package convertSortedListToBST;

import java.util.ArrayList;

public class ListToArrayList {
	public TreeNode sortedListToBST(ListNode head) {
		if (head == null) {
			return null;
		}
		ArrayList<Integer> sortedData = new ArrayList<Integer>();
		while (head != null) {
			sortedData.add(head.val);
			head= head.next;
		}

		TreeNode root = sortedListToBSTHelper(sortedData, 0,
				sortedData.size() - 1);
		return root;
	}

	private TreeNode sortedListToBSTHelper(ArrayList<Integer> sortedData,
			int start, int end) {
		if (start == end) {
			return new TreeNode(sortedData.get(start));
		} else if (start > end) {
			return null;
		} else {
			int mid = (end - start + 1) % 2 == 0 ? start + (end - start) / 2
					+ 1 : start + (end - start) / 2;
			TreeNode root = new TreeNode(sortedData.get(mid));
			root.left = sortedListToBSTHelper(sortedData, start, mid - 1);
			root.right = sortedListToBSTHelper(sortedData, mid + 1, end);
			return root;
		}

	}
}
