package scrambleString;

public class DP {
	public static boolean isScramble(String s1, String s2) {
		if (s1 == null && s2 == null) {
			return true;
		}
		if (s1.isEmpty() && s2.isEmpty()) {
			return true;
		}
		int l1 = s1.length();
		int l2 = s2.length();
		if (l1 != l2) {
			return false;
		}
		if (l1 == 1) {
			if (s1.charAt(0) == s2.charAt(0)) {
				return true;
			} else {
				return false;
			}
		}
		int n = l1;
		boolean[][][] dp = new boolean[n][n][n + 1];
		
		for (int i = n-1; i>= 0; i--) {
			for (int j = n -1; j >= 0; j--) {
				for (int k = 1; k <= n - Math.max(i, j); k++) {
					if (s1.substring(i, i+ k).equals(s2.substring(j,j+ k))) {
						dp[i][j][k] = true;
					} else {
						for (int l = 1; l < k; l++) {
							if (dp[i][j][l] == dp[i+l][j+l][k - l])
						}
					}
				}
			}
		}

	}
}
