package sumRootToLeafNumbers;

import java.util.ArrayList;

public class DFS {
	public static int sumNumbers(TreeNode root) {
		if (root == null) {
			return 0;
		}

		ArrayList<Integer> results = new ArrayList<Integer>();
		int number = 0;
		sumNumbersHelper(root, results, number);
		int sum = 0;
		for (int r : results) {
			sum += r;
		}
		return sum;
	}

	private static void sumNumbersHelper(TreeNode root,
			ArrayList<Integer> results, int number) {

		number = number * 10 + root.val;
		if (root.left == null && root.right == null) {
			results.add(number);
			return;
		}
		if (root.left != null) {
			sumNumbersHelper(root.left, results, number);
		}
		if (root.right != null) {
			sumNumbersHelper(root.right, results, number);
		}
	}

	public static void main(String[] args) {
		TreeNode t1 = new TreeNode(1);
		TreeNode t2 = new TreeNode(2);
		TreeNode t3 = new TreeNode(3);
		t1.left = t2;
		t1.right = t3;

		System.out.println(sumNumbers(t1));
	}
}
