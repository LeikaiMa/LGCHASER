package mostWaterContainer;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Hashtable;
import java.util.Set;

public class ContainerWithMostWater {
	public int maxArea(int[] height) {
        Hashtable<Integer, ArrayList<Integer>> containers= new Hashtable<Integer, ArrayList<Integer>>();
        int maxArea = Integer.MIN_VALUE;
        for (int i = 0; i < height.length; i++) {
        	if (!containers.containsKey(height[i])) {
        		ArrayList<Integer> heights = new ArrayList<Integer>();
        		heights.add(i);
        		containers.put(height[i], heights);
        	} else {
        		ArrayList<Integer> heights = containers.get(height[i]);
        		heights.add(i);
        	}
        }
        
        Set<Integer> keys = containers.keySet();
        for (Integer key: keys) {
        	ArrayList<Integer> heights = containers.get(key);
        	Collections.sort(heights);
        	int area = key * (heights.get(heights.size() - 1) - heights.get(0));
        	if (maxArea < area) {
        		maxArea = area;
        	}
        }
        return maxArea;
    }
}
