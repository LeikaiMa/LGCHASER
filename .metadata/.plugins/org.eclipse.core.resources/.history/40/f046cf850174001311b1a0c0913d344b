package longestValidParentheses;

import java.util.HashMap;
import java.util.Stack;

public class UseStack {
	public static int longestValidParentheses(String s) {
		if (s == null || s.length() == 0 || s.length() == 1) {
			return 0;
		}
		
		HashMap<Integer, Integer> parenIndex = new HashMap<Integer, Integer>();
		
		Stack<Integer> paren = new Stack<Integer>();
		
	}
	
	
	

	public static void main(String[] args) {
		System.out.println(longestValidParentheses(")()())") == 4);
		System.out.println(longestValidParentheses("()(()") == 2);
		System.out.println(longestValidParentheses("()(())") == 6);
	}

}
