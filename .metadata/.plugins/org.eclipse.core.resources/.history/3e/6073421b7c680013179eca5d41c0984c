package surroundedRegions;

import java.util.LinkedList;
import java.util.Queue;

public class BFS {
	public static void solve(char[][] board) {
		if (board == null) {
			return;
		}
		int row = board.length;
		if (row == 0) {
			return;
		}
		int column = board[0].length;
		if (row == 0 && column == 0) {
			return;
		}
		Queue<Integer> r = new LinkedList<Integer>();
		Queue<Integer> c = new LinkedList<Integer>();
		for (int i = 0; i < column; i++) {
			if (board[0][i] == 'O') {
				
			}
			if (board[row - 1][i] == 'O' && !visited[row - 1][i]) {
				visit((row - 1), i, board, visited);
			}
		}
	}
}
