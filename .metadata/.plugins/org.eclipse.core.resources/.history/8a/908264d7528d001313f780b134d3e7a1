package peekIterator;

import java.util.Iterator;

public class Peekable<T> implements Iterator<T>{
	private Iterator<T> iterator;
	private boolean hasPeek;
	private T top;

	public Peekable(Iterator<T> iterator) {
		this.iterator = iterator;
		getTop();
	}
	
	private void getTop() {
		hasPeek = false;
		if (iterator.hasNext()) {
			hasPeek = true;
			top = iterator.next();
		}
	}

	@Override
	public boolean hasNext() {
		return hasPeek;
	}

	@Override
	public T next() {
		if (!hasPeek) {
			try {
				throw new Exception();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}

		T currentTop = top;
		getTop();
		return currentTop;
	}

	@Override
	public void remove() {
		// TODO Auto-generated method stub

	}

}
