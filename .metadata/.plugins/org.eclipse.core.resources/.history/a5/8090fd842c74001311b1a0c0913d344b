package symmetricTree;

import java.util.ArrayList;

public class BFS {
	public boolean isSymmetric(TreeNode root) {
		if (root == null) {
			return false;
		}
		if (root.left == null || root.right == null
				|| root.left.val != root.right.val) {
			return false;
		}
		
		ArrayList<TreeNode> left = new ArrayList<TreeNode>();
		ArrayList<TreeNode> right = new ArrayList<TreeNode>();
		
		left.add(root.left);
		right.add(root.right);
		
		while (!left.isEmpty() && !right.isEmpty()) {
			ArrayList<TreeNode> tmpLeft = new ArrayList<>();
			for (int i = 0; i < left.size(); i++) {
				TreeNode l = left.get(i);
				TreeNode r = 
			}
		}
	}
}
