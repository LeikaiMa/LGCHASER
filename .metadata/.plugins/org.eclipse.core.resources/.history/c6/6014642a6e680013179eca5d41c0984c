package surroundedRegions;

public class SurroundedRegions {
	public void solve(char[][] board) {
		if (board == null) {
			return;
		}
		int row = board.length;
		int column = board[0].length;
		boolean[][] visited = new boolean[row][column];
		for (int i = 0; i < column; i++) {
			if (board[0][i] == 'O' && !visited[0][i]) {
				visit(0, i, board, visited);
			}
			if (board[row - 1][i] == 'O' && !visited[row - 1][i]) {
				visit(row - 1, i, board, visited);
			}
		}

		for (int i = 0; i < row; i++) {
			if (board[i][0] == 'O' && !visited[i][0]) {
				visit(board[i][0], board, visited);
			}
			if (board[i][row - 1] == 'O' && !visited[i][row - 1]) {
				visit(board[i][row - 1], board, visited);
			}
		}
	}

	public void visit() {

	}
}
