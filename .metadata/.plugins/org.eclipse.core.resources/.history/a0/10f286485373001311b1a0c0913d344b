package binaryTreeZigzagLevelOrderTraversal;

import java.util.ArrayList;
import java.util.Collections;

public class UseStack {
	public ArrayList<ArrayList<Integer>> zigzagLevelOrder(TreeNode root) {
		ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();
		if (root == null) {
			return results;
		}
		
		ArrayList<TreeNode> level = new ArrayList<TreeNode>();
		level.add(root);
		boolean reverse = false;
		while (!level.isEmpty()) {
			ArrayList<TreeNode> tmp = new ArrayList<TreeNode>();
			ArrayList<Integer> content = new ArrayList<Integer>();
			for (TreeNode node: level) {
				content.add(node.val);
				if (node.left != null) {
					tmp.add(node.left);
				}
				
				if (node.right != null) {
					tmp.add(node.right);
				}
			}
			
			if (reverse) {
				Collections.reverse(content);
			}
			reverse = !reverse;
			
			
		}
	}
}
