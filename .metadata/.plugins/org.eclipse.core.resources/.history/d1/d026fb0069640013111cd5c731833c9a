package subSets;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class Subsets {
	public static ArrayList<ArrayList<Integer>> subsets(int[] S) {
		if (S == null) {
			return null;
		}
		ArrayList<Integer> s = new ArrayList<>();
		for (int i : S) {
			s.add(i);
		}
		Collections.reverse(s);
		ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();
		addSubSet(results, s, 0);
		return results;
	}

	private static void addSubSet(ArrayList<ArrayList<Integer>> results,
			ArrayList<Integer> s, int index) {
		
		if (index == s.size()) {
			ArrayList<Integer> a = new ArrayList<Integer>();
			results.add(a);
		} else {
			addSubSet(results, s, index + 1);
			int i = s.get(index);
			ArrayList<ArrayList<Integer>> r = new ArrayList<ArrayList<Integer>>();
 			for (ArrayList<Integer> a : results) {
				@SuppressWarnings("unchecked")
				ArrayList<Integer> c = (ArrayList<Integer>) a.clone();
				c.add(i);
			}
 			
		}
		
	}

	public static void main(String[] args) {
		int[] S = new int[3];
		S[0] = 1;
		S[1] = 2;
		S[2] = 3;
		System.out.println(Arrays.toString(S));
		ArrayList<ArrayList<Integer>> result = subsets(S);
		for (ArrayList<Integer> arrayList : result) {
			System.out.println(arrayList);
		}
	}
}
