package longestConsecutiveSequence;

import java.util.HashMap;

public class ClusterMergeHashMap {
	public int longestConsecutive(int[] num) {
		if (num == null || num.length == 0) {
			return 0;
		}

		HashMap<Integer, Integer> range = new HashMap<Integer, Integer>();
		int max = 1;
		for (int i : num) {
			if (range.containsKey(i)) {
				continue;
			}

			range.put(i, 1);
			if (range.containsKey(i - 1)) {
				max = Math.max(max, merge(range, i - 1, i));
			}

			if (range.containsKey(i + 1)) {
				max = Math.max(max, merge(range, i, i + 1));
			}
		}

		return max;
	}

	public int merge(HashMap<Integer, Integer> range, int left, int right) {
		int upper = right + range.get(right) - 1;
		int lower = left - range.get(left) + 1;

		int length = upper - lower + 1;
		range.put(upper, length);
		range.put(lower, length);

		return length;
	}
}
