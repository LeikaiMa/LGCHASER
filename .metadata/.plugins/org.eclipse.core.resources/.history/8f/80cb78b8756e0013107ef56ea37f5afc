package largestSumMatrix;

public class DPSum {
	int[][] precomputeMatrix(int[][] matrix) {
		int[][] sumMatrix = new int[matrix.length][matrix[0].length];
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (i == 0 && j == 0) {
					sumMatrix[i][j] = matrix[i][j];
				} else if (j == 0) {
					sumMatrix[i][j] = sumMatrix[i - 1][j] + sumMatrix[i][j];
				} else if (i == 0) {
					sumMatrix[i][j] = sumMatrix[i][j - 1] + sumMatrix[i][j];
				} else {
					sumMatrix[i][j] = sumMatrix[i - 1][j] + sumMatrix[i][j - 1]
							- sumMatrix[i - 1][j - 1] + sumMatrix[i][j];
				}
			}
		}
		return sumMatrix;
	}
}
