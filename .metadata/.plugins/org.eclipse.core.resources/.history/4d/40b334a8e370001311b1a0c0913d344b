package editDistance;

import java.util.ArrayList;
import java.util.HashSet;

public class BFSAndHashmap {
	public int minDistance(String word1, String word2) {
		if (word1 == null || word1 == null) {
			return 0;
		}

		if (word1.length() == 0) {
			return word2.length();
		}
		if (word2.length() == 0) {
			return word1.length();
		}

		if (word1.equals(word2)) {
			return 0;
		}

		word1 = word1.toLowerCase();
		word2 = word2.toLowerCase();
		HashSet<String> visited = new HashSet<String>();
		visited.add(word1);
		ArrayList<String> arrayList = new ArrayList<String>();
		arrayList.add(word1);

		int step = -1;

		while (true) {
			step++;
			ArrayList<String> tmp = new ArrayList<String>();
			for (String s : arrayList) {
				if (s.equals(word2)) {
					return step;
				} else {
					int len1 = word1.length();
					int len2 = word2.length();
					if (len1 < len2) {
						insertChar(word1, tmp, visited);
					} else if (len1 == len2) {
						replaceChar(word1, tmp, visited);
					} else {
						deleteChar(word1, tmp, visited);
					}
				}
			}
			arrayList = tmp;
		}
	}

	private void deleteChar(String word1, ArrayList<String> tmp,
			HashSet<String> visited) {
		// TODO Auto-generated method stub
		
	}

	private void replaceChar(String word1, ArrayList<String> tmp,
			HashSet<String> visited) {
		// TODO Auto-generated method stub
		
	}

	private void insertChar(String word1, ArrayList<String> tmp,
			HashSet<String> visited) {
		
		
	}
}
