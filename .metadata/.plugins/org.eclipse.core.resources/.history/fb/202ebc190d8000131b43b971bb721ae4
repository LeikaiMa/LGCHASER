package longestValidParentheses;

public class CheckNextPositionAndNextNextPostition {
	public int longestValidParentheses(String s) {
        int max = 0;
        int[] dp = new int[s.length()];
        
        for (int i = s.length() - 2; i >= 0; i--) {
            if (s.charAt(i) == ')') {
                continue;
            } else {
                if ((i + dp[i + 1] + 1) < s.length() && s.charAt(i + dp[i + 1] + 1) == ')') {
                    dp[i] = dp[i + 1] + 2;
                    
                    if (dp[i] + i < s.length()) {
                        dp[i] += dp[dp[i] + i];
                    }
                    
                    max = Math.max(max, dp[i]);
                }
            }
        }
        
        return max;
    }
}
