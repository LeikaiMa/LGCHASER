package cloneGraph;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.Queue;

public class HashMapGetRelationship {
    public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) {
        if (node == null) {
            return null;
        }
        
        HashMap<UndirectedGraphNode, UndirectedGraphNode> map = new HashMap<UndirectedGraphNode, UndirectedGraphNode>();
        
        Queue<UndirectedGraphNode> queue = new LinkedList<UndirectedGraphNode>();
        
        UndirectedGraphNode copy = new UndirectedGraphNode(node.label);
        map.put(node, copy);
        queue.add(node);
        
        while (!queue.isEmpty()) {
            UndirectedGraphNode cur = queue.poll();
            for (UndirectedGraphNode n : cur.neighbors) {
                if (map.containsKey(n)) {
                    map.get(cur).neighbors.add(map.get(n));
                } else {
                    UndirectedGraphNode ncopy = new UndirectedGraphNode(n.label);
                    map.put(n, ncopy);
                    queue.add(n);
                    map.get(cur).neighbors.add(ncopy);
                }
            }
        }
        
        return copy;
    }
}
