package mimumWindowSubstring;

public class ON {

	public String minWindow(String S, String T) {
		int[] appearCount = new int[256];
		int[] expectCount = new int[256];

		for (int i = 0; i < T.length(); i++) {
			expectCount[T.charAt(i)]++;
		}

		int wordEnd = 0, wordStart = 0;
		int appear = 0;
		int min = Integer.MAX_VALUE;
		int minStart = -1;
		for (; wordEnd < S.length(); wordEnd++) {
			char c = S.charAt(wordEnd);
			if (expectCount[c] > 0) {

				if (appearCount[c] < expectCount[c]) {
					appear++;
				}
				appearCount[c]++;
			}

			if (appear == T.length()) {
				while (appearCount[S.charAt(wordStart)] > expectCount[S
						.charAt(wordStart)]
						|| expectCount[S.charAt(wordStart)] == 0) {
					appearCount[S.charAt(wordStart)]--;
					wordStart++;
				}
				
				if (min > wordEnd - wordStart + 1) {
					min = wordEnd - wordStart + 1;
					minStart = wordStart;
				}
			}
		}
	}
}
