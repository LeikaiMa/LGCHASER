package combinationSum;

import java.util.ArrayList;
import java.util.Arrays;

public class BackTrace {
	public static ArrayList<ArrayList<Integer>> combinationSum(int[] candidates,
			int target) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		if (candidates == null || candidates.length == 0) {
			return result;
		}
		
		Arrays.sort(candidates);
		result = combinationSumHelper(candidates, candidates.length - 1, target);
		return result;
	}

	private static ArrayList<ArrayList<Integer>> combinationSumHelper(
			int[] candidates, int index, int target) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		while(index >= 0 && candidates[index] > target) {
			index--;
		}
		if 
		return null;
	}
}
