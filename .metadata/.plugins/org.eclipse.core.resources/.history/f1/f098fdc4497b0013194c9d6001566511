package combinationSumII;

import java.util.ArrayList;
import java.util.Arrays;

public class RemoveDup {
	public ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
		Arrays.sort(num);
		ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> result = new ArrayList<Integer>();
		int sum = 0;
		helper(results, result, num, 0, sum, target);
		return results;
	}

	public void helper(ArrayList<ArrayList<Integer>> results,
			ArrayList<Integer> result, int[] num, int index, int sum, int target) {
		for (int i = index; i < num.length; i++) {
			sum += num[i];
			if (sum < target) {
				result.add(num[i]);
				helper(results, result, num, i + 1, sum, target);
			} else if (sum == target) {
				result.add(num[i]);
				results.add(new ArrayList<Integer>(result));
			} else {
				break;
			}
			result.remove(result.size() - 1);
			sum -= num[i];
			while (i < num.length - 1 && num[i] == num[i + 1]) {
				i++;
			}
		}
	}
}
