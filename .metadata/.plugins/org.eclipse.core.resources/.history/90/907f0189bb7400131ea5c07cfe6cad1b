package maximumSubarray;

public class DivideAndConquer {
	public static int maxSubArray(int[] A) {
		if (A == null || A.length == 0) {
			return 0;
		}
		int max = Integer.MIN_VALUE;
		return maxSubArrayHelper(A, 0, A.length - 1, max);
	}

	private static int maxSubArrayHelper(int[] A, int start, int end, int max) {
		if (start > end) {
			return Integer.MIN_VALUE;
		}

		int mid = start + (end - start) / 2;
		int maxLeft = maxSubArrayHelper(A, start, mid - 1, max);
		int maxRight = maxSubArrayHelper(A, mid + 1, end, max);
		return 0;
	}
}
