package bestTimeToBuyAndSellStockIII;

public class DP {
	public int maxProfit(int[] prices) {
		int n = prices.length;
		int[] first = new int[n];
		int[] second = new int[n];
		
		int buy = 0;
		int sell = 0;
		int min = 0;
		int maxdiff = 0;
		
		for (int i = 0; i < n; i++) {
			if (prices[i] < prices[min]) {
				min = i;
			} else {
				int diff = prices[i] - prices[min];
				if (diff > maxdiff) {
					buy = min;
					sell = i;
					maxdiff = diff;
				}
			}
			first[i] = maxdiff;
		}
		buy = n -1;
		sell = n -1;
		int max = n - 1;
	}
}
