package distinctSubsequences;

public class ReplaceAndDEletion {
	public int numDistinct(String S, String T) {
		if (S == null || T == null) {
			return 0;
		}

		if (S.length() < T.length()) {
			return 0;
		}

		int[][] dp = new int[T.length() + 1][S.length() + 1];

		for (int j = 0; j < S.length() + 1; j++) {
			dp[0][j] = 1;
		}

		for (int i = 1; i < T.length() + 1; i++) {
			dp[i][0] = 0;
		}

		for (int i = 1; i < T.length() + 1; i++) {
			for (int j = 1; j < S.length() + 1; j++) {
				if (S.charAt(j - 1) == T.charAt(i - 1)) {
					dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];
				} else {
					dp[i][j] = dp[i][j - 1];
				}
			}
		}

		return dp[T.length()][S.length()];
	}
}
