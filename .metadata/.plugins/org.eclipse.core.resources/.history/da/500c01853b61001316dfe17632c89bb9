package distinctSubsequences;

import java.util.ArrayList;

public class DistinctSubsequences {
	public static int numDistinct(String S, String T) {
		S = S.toLowerCase();
		T = T.toLowerCase();
		if (S.length() < T.length()) {
			return 0;
		}

		if (T.length() == 0 && S.length() != 0) {
			return 1;
		}

		if (T.length() == 0 && S.length() == 0) {
			return 1;
		}

//		char[] s = new char[S.length()];
		ArrayList<char> s= new ArrayList<char>();
		int[] ns = new int[S.length()];
		char[] t = new char[T.length()];
		int[] nt = new int[T.length()];
		
		s[0] = S.charAt(0);
		ns[0] = 1;
		int postion = 0;

		for (int i = 1; i < S.length(); i++) {
			if (S.charAt(i) == s[])
		}

		return 0;
	}

	public static void main(String[] args) {

	}

}
