package nextPermutation;

import java.util.Arrays;

public class InPlace {
	public static void nextPermutation(int[] num) {
		if (num == null || num.length == 0 || num.length == 1) {
			return;
		}

		 for (int i = num.length - 1; i > 0; i--) {
		 if (num[i] > num[i-1]) {
		 int tmp = num[i];
		 num[i] = num[i-1];
		 num[i-1] = tmp;
		 Arrays.sort(num, i, num.length);
		 return;
		 }
		 }

//		for (int i = 1; i < num.length - 1; i++) {
//			for (int j = num.length - 1; j >= i; j--) {
//				if (num[j] > num[j - i]) {
//					int tmp = num[j];
//					num[j] = num[j - i];
//					num[j - i] = tmp;
//					Arrays.sort(num, j - i + 1, num.length);
//					return;
//				}
//			}
//		}

		Arrays.sort(num);
	}

	public static void main(String[] args) {
		int[] num = { 4, 2, 0, 2, 3, 2, 0 };
		nextPermutation(num);
		System.out.println(Arrays.toString(num));
		int[] num1 = { 2, 3, 1 };
		nextPermutation(num1);
		System.out.println(Arrays.toString(num1));
		int[] num2 = { 1, 3, 2 };
		nextPermutation(num2);
		System.out.println(Arrays.toString(num2));
	}
}
