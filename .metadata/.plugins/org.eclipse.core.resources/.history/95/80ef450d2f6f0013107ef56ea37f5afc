package splitSentence;

import java.util.Hashtable;

public class Optimization {
	public String sentence;
	public Trie dictionary;
	public int parseOptimized(int wordStart, int wordEnd,
			Hashtable<Integer, Integer> cache) {
		if (wordEnd >= sentence.length()) {
			return wordEnd -  wordStart;
		}
		
		if (cache.contains(wordStart)) {
			return cache.get(wordStart);
		}
		
		String currentWord= sentence.substring(wordStart, wordEnd + 1);
		
		boolean validPartial = dictionary.contains(currentWord, false);
		
		int bestExact = parseOptimized(wordEnd + 1, wordEnd + 1, cache);
		
		if (!validPartial || !dictionary.contains(currentWord, true)) {
			bestExact += currentWord.length();
		}
	}
}
