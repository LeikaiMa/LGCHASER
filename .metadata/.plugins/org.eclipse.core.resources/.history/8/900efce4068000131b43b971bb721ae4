package letterCombinationsOfAPhoneNumber;

import java.util.ArrayList;
import java.util.HashMap;

public class StoreCorrespondingDigitsToChar {
    public ArrayList<String> letterCombinations(String digits) {
        HashMap<Character, String> map = new HashMap<Character, String>();
        map.put('2', "abc");
        map.put('3', "def");
        map.put('4', "ghi");
        map.put('5', "jkl");
        map.put('6', "mno");
        map.put('7', "pqrs");
        map.put('8', "tuv");
        map.put('9', "wxyz");
        
        StringBuffer sb = new StringBuffer();
        ArrayList<String> result = new ArrayList<String>();
        
        helper(digits, 0, result, sb, map);
        
        return result;
    }
    
    private void helper(String digits, int d, ArrayList<String> result, StringBuffer sb, HashMap<Character, String> map) {
        if (d == digits.length()) {
            result.add(sb.toString());
        } else {
            char c = digits.charAt(d);
            
            if (map.containsKey(c)) {
                String s = map.get(c);
                
                for (int i = 0; i < s.length(); i++) {
                    sb.append(s.charAt(i));
                    helper(digits, d + 1, result, sb, map);
                    sb.deleteCharAt(sb.length() - 1);
                }
            } else {
                helper(digits, d + 1, result, sb, map);
            }
        }
     }
}
