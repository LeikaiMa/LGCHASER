package distinctSubsequences;

import java.util.ArrayList;
import java.util.TreeMap;

public class RefinedDS {
	public static int numDistinct(String S, String T) {
		S = S.toLowerCase();
		T = T.toLowerCase();
		if (S.length() < T.length()) {
			return 0;
		}

		if (T.length() == 0 && S.length() != 0) {
			return 1;
		}

		if (T.length() == 0 && S.length() == 0) {
			return 1;
		}

		ArrayList<Character> s = new ArrayList<Character>();
		ArrayList<Integer> ns = new ArrayList<Integer>();
		ArrayList<Character> t = new ArrayList<Character>();
		ArrayList<Integer> nt = new ArrayList<Integer>();
		shrink(s, ns, S);
		shrink(t, nt, T);

		ArrayList<TreeMap<Integer,Integer>> treemaps = new ArrayList<TreeMap<Integer,Integer>>(2); 
		for (int i = 0; i < t.size(); i++) {
			countMaps[i] = new TreeMap<>();
			
		}
		return 0;
	}
	
	
	private static void shrink(ArrayList<Character> s, ArrayList<Integer> ns,
			String S) {
		int position = 0;
		int count = 1;
		s.add(S.charAt(position));
		for (int i = 1; i < S.length(); i++) {
			if (s.get(position) == S.charAt(i)) {
				count++;
			} else {
				ns.add(count);
				s.add(S.charAt(i));
				count = 1;
				position++;
			}
		}
		ns.add(count);
	}
	
	public static void main(String[] args) {
//		String S = "ABCDE";
//		String T = "AEC";
		// String S = "rabbbit";
		// String T = "rabbit";
		 String S = "aacaacca";
		 String T = "ca";
		System.out.println(numDistinct(S, T));
	}
}
