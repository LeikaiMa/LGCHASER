package reflection;

import java.awt.Rectangle;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

// reflection 能够得到java class 和object 的information
// 能够了解到class 在运行的时候method 的field 代表的是什么
// 能够生成一个class 的新的 instance
// 能够直接得到和存放 Object 的field reference 不管access 的modifier 是什么
public class Reflection {
	public static void main(String[] args) throws ClassNotFoundException, NoSuchMethodException, SecurityException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		Object[] doubleArgs = new Object[] { 4.2, 3.9 };
		Class rectangleDefinition = Class.forName("MyProj.Rectangle");

		Class[] doubleArgsClass = new Class[] { double.class, double.class };
		@SuppressWarnings({ "unchecked", "unused", "rawtypes" })
		Constructor doubleArgsConstructor = rectangleDefinition.getConstructor(doubleArgsClass);
		
		Rectangle rectangle = (Rectangle) doubleArgsConstructor.newInstance(doubleArgs);
	}
}
