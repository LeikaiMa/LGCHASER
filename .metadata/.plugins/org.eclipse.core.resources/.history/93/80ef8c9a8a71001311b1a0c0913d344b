package wordLadder;

import java.util.ArrayList;
import java.util.HashSet;

public class UseHashSet {
	public int ladderLength(String start, String end, HashSet<String> dict) {
		if (start.equals(end)) {
			return 0;
		}
		if (dict.contains(end)) {
			return 1;
		}

		HashSet<String> visited = new HashSet<String>();
		ArrayList<String> processing = new ArrayList<String>();
		processing.add(start);
		int len = 0;
		while (!processing.isEmpty()) {
			len++;
			if (processing.contains(end)) {
				return len;
			}
			ArrayList<String> tmp = new ArrayList<String>();
			for (String s : processing) {
				replace(s, visited, dict, tmp);
			}
			processing = tmp;
		}
		return 0;
	}

	private void replace(String s, HashSet<String> visited,
			HashSet<String> dict, ArrayList<String> tmp) {
		char[] word = s.toCharArray();
		for (int i = 0; i < word.length; i++) {
			
		}
	}
}
