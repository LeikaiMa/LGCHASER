package maxPointsOnALine;

import java.util.HashMap;

public class CheckEachPointAfterItself {
    public int maxPoints(Point[] points) {
        if (points == null) {
            return 0;
        }
        
        if (points.length <= 2) {
            return points.length;
        }
        
        int max = 2;
        
        for (int i = 0; i < points.length; i++) {
            HashMap<Double, Integer> slides = new HashMap<Double, Integer>();
            int dup = 1;
            for (int j = i + 1; j < points.length; j++) {
                double slide = getSlide(points[i], points[j]);
                
                if (slide == Double.MIN_VALUE) {
                    dup++;
                } else if (slides.containsKey(slide)) {
                    slides.put(slide, slides.get(slide) + 1);
                } else {
                    slides.put(slide, 1);
                }
            }
            max = Math.max(max, dup);
            for (Integer value : slides.values()) {
                max = Math.max(max, value + dup);
            }
        }
        
        return max;
    }
    
    private double getSlide(Point a, Point b) {
        if (a.x == b.x && a.y == b.y) {
            return Double.MIN_VALUE;
        } else if (a.x == b.x) {
            return Double.MAX_VALUE;
        } else if (a.y == b.y) {
            return 0;
        } else {
            return (a.y - b.y) * 1.0 / (a.x - b.x);
        }
    }
}
