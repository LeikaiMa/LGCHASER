package distinctSubsequences;

import java.util.ArrayList;
import java.util.TreeSet;

public class DPSolution {
	public int numDistinct(String S, String T) {
		ArrayList<TreeSet<Integer>> tArrayList = new ArrayList<TreeSet<Integer>>();
		for (int i = 0; i < T.length(); i++) {
			tArrayList.add(new TreeSet<Integer>());
		}
		for (int i = 0; i < T.length(); i++) {
			for (int j = 0; j < S.length(); j++) {
				if (T.charAt(i) == S.charAt(j)) {
					tArrayList.get(i).add(j);
				}
			}
		}
		if (tArrayList.size() == 1) {
			return tArrayList.get(0).size();
		}
		int num = numDistinctHelper(tArrayList, 1, tArrayList.get(0));
	}

	private int numDistinctHelper(ArrayList<TreeSet<Integer>> tArrayList, int start, TreeSet<Integer> subT) {
		if (start == tArrayList.size() - 1 ) {
			
		}
		return 0;
	}
}
