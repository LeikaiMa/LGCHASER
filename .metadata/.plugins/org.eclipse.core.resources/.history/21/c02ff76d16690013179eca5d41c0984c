package palindrome;

// palindrome 也可以用递归的方法来进行比较，base case 是在最中间，可以是null 也可以是已经存在但是length 的长度是0
// 这两种情况都是没有node 但是 可以算作是对称的。
// 如果是length 是1 
import removeDuplicate.LinkedListNode;

public class Recursive {
	public Result isPalindromeRecurse(LinkedListNode head, int length) {
		if (head == null || length == 0) {
			return new Result(null, true);
		} else if (length == 1) {
			return new Result(head.next, true)
		} else {
			return new Result(head.next.next, head.data == head.next.data);
		}

		Result res = isPalindromeRecurse(head.next, length - 2);
		if (!res.result || res.node == null) {
			return res;
		} else {
			res.result = head.data == res.node.data;
			res.node = res.node.next;
			return res;
		}
	}

	public boolean isPalindrome(LinkedListNode head) {
		Result p = isPalindromeRecurse(head, listSize(head));
		return p.result;
	}

	private int listSize(LinkedListNode head) {
		// TODO Auto-generated method stub
		return 0;
	}
}
