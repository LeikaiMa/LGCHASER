package pathSumII;

import java.util.ArrayList;

public class DFS {
	public ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
		ArrayList<ArrayList<Integer>> paths = new ArrayList<ArrayList<Integer>>();
		if (root == null) {
			return paths;
		}
		int cur = 0;
		paths = pathSumHelper(root, cur, sum);
		return paths;
	}

	private ArrayList<ArrayList<Integer>> pathSumHelper(TreeNode root, int cur,
			int sum) {
		ArrayList<ArrayList<Integer>> paths = new ArrayList<ArrayList<Integer>>();
		cur += root.val;
		if (root.left == null && root.right == null) {
			if (cur == sum) {
				ArrayList<Integer> path = new ArrayList<Integer>();
				path.add(root.val);
				paths.add(path);
			}
		}
		return null;
	}
}
