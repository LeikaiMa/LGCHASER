package reorderList;

public class SlowFastMerge {
    public void reorderList(ListNode head) {
        if (head == null || head.next == null) {
            return;
        }  
        
        ListNode slow = head;
        ListNode fast = head;
        
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        
        ListNode dummy = new ListNode(0);
        dummy.next = slow.next;
        
        slow.next = null;
        
        ListNode last = dummy.next;
        if (last != null) {
          while (last.next != null) {
                ListNode cur = last.next;
                last.next = cur.next;
                cur.next = dummy.next;
                dummy.next = cur;
          }
        }
        
        ListNode head2 = dummy.next;
        ListNode head1 = head;
        dummy = new ListNode(0);
        ListNode prev = dummy;
        
        while (head2 != null) {
            prev.next = head1;
            head1 = head1.next;
            prev.next.next = head2;
            prev = head2;
            head2 = head2.next;
        }
       
      }
}
