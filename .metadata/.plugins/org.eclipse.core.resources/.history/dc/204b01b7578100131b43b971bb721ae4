package leastCommonAncestorWithParent;
//CC
//如果有parent 就不需要递归了， 就只要从现在这个出发，然后两个往上走，如果相遇就说明这个就是他们最短的ancestor
//如果没有相遇，就说明不在同一个tree 里面。
public class CountDepth {
	public TreeNode getLCA(TreeNode p, TreeNode q) {
		int h1 = getHeight(p);
		int h2 = getHeight(q);

		if (h1 < h2) {
			TreeNode tmp = p;
			p = q;
			q = tmp;
			int t = h1;
			h1 = h2;
			h2 = t;
		}

		while (h1 > h2) {
			p = p.parent;
			h1--;
		}

		while (p != null && q != null) {
			if (p == q) {
				return p;
			}

			p = p.parent;
			q = q.parent;
		}

		return null;
	}

	public int getHeight(TreeNode p) {
		int height = 0;
		while (p != null) {
			p = p.parent;
			height++;
		}
		return height;
	}
}
