package balancedBinaryTree;

import java.util.ArrayList;

public class BFS {
	public static  boolean isBalanced(TreeNode root) {
		if (root == null) {
			return true;
		}

		ArrayList<TreeNode> level = new ArrayList<TreeNode>();
		level.add(root);
		boolean noChild = false;
		while (!level.isEmpty()) {
			ArrayList<TreeNode> tmp = new ArrayList<TreeNode>();
			for (TreeNode node : level) {
				TreeNode left = node.left;
				TreeNode right = node.right;
				if (noChild && (left != null || right != null)) {
					return false;
				}
				if (left != null) {
					tmp.add(left);
				}
				if (right != null) {
					tmp.add(right);
				}
			}

			if (tmp.size() < level.size() * 2) {
				noChild = true;
			}
			level = tmp;

		}
		return true;
	}
	
	public static void main(String[] args) {
		TreeNode t1 = new TreeNode(1);
		TreeNode t2 = new TreeNode(2);
		TreeNode t3 = new TreeNode(3);
		t1.right = t2;
		t2.right = t3;
		System.out.println(isBalanced(t1));
	}
}
