package reverseGroup;

public class TwoPointer {
	public ListNode reverseKGroup(ListNode head, int k) {
		if (head == null || k == 1) {
			return head;
		}
		ListNode fast = head.next;
		ListNode slow = head;
		int i = 0;
		for (i = 0; i < k; i++) {
			if (fast == null) {
				break;
			}
			slow = fast;
			fast = fast.next;
		}

		if (i < k) {
			return head;
		}

		ListNode runner = head.next;
		ListNode walker = head;
		head.next = fast;
		ListNode newHead = slow;
		while (runner != fast) {
			ListNode tmp = runner;
			runner = runner.next;
			tmp.next = walker;
			walker = tmp;
		}
		
		while (fast != null) {
			
		}
		return newHead;

	}
}
