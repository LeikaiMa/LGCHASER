package recoverBinarySearchTree;

public class CheckTwoInorderPlaces {
	public void recoverTree(TreeNode root) {
		if (root == null) {
			return;
		}

		TreeNode first = null;
		TreeNode second = null;

		helper(null, root, first, second);

		swap(first, second);
	}

	private TreeNode helper(TreeNode prev, TreeNode root, TreeNode first,
			TreeNode second) {
		if (root.left != null) {
			prev = helper(prev, root.left, first, second);
		}

		if (prev != null) {
			if (prev.val > root.val) {
				if (first == null) {
					first = prev;
				}
				second = root;
			}
		}

		if (root.right != null) {
			return helper(root, root.right, first, second);
		} else {
			return root;
		}
	}

	private void swap(TreeNode t1, TreeNode t2) {
		int tmp = t1.val;
		t1.val = t2.val;
		t2.val = tmp;
	}
	
	
	public static void main(String[] args) {
		TreeNode t1 = new TreeNode(0);
		TreeNode t2 = new TreeNode(1);
		t1.left = t2;
	}
}
