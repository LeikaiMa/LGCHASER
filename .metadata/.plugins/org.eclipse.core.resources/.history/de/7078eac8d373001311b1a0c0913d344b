package insertionSortList;

public class InsertSort {
	public static ListNode insertionSortList(ListNode head) {
		if (head == null || head.next == null) {
			return head;
		}

		ListNode dummy = new ListNode(0);
		dummy.next = head;

		ListNode next = head.next;

		while (next != null) {

			ListNode prev = dummy;

			while (prev.next != next && prev.next.val <= next.val) {
				prev = prev.next;
			}

			if (prev.next == next) {
				next = next.next;
			} else {
				ListNode cur = prev.next;
				ListNode nNext = next.next;
				prev.next = next;
				next.next = cur;
				
				while (cur.next != next) {
					cur = cur.next;
				}
				cur.next = nNext;
			}
		}
		return dummy.next;
	}

	public static void printList(ListNode head) {
		while (head != null) {
			System.out.print(head.val + "=>");
			head = head.next;
		}

		System.out.println("NULL");
	}

	public static void main(String[] args) {
		ListNode l1 = new ListNode(2);
		ListNode l2 = new ListNode(1);
		ListNode l3 = new ListNode(3);
		ListNode l4 = new ListNode(4);
		ListNode l5 = new ListNode(3);
		ListNode l6 = new ListNode(2);
		ListNode l7 = new ListNode(5);
		ListNode l8 = new ListNode(6);

		l1.next = l2;
		l2.next = l3;
		l3.next = l4;
		l4.next = l5;
		l5.next = l6;
		l6.next = l7;
		l7.next = l8;

		ListNode head = insertionSortList(l1);
		printList(head);

	}
}
