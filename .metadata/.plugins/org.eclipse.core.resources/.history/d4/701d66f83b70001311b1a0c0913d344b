package textJustification;

import java.util.ArrayList;

public class Classification {
	public static ArrayList<String> fullJustify(String[] words, int L) {
		ArrayList<String> results = new ArrayList<String>();
		if (words == null || words.length == 0) {
			return results;
		}
		int totalWords = words.length;
		int curLen = words[0].length();
		StringBuffer result = new StringBuffer();
		int lastI = 0;
		for (int i = 1; i <= totalWords; i++) {
			if (i == totalWords || curLen + words[i].length() + i - lastI > L) {

				int spaceSlots = i - 1 - lastI;
				int totalSpace = L - curLen;
				if (spaceSlots == 0) {
					result.append(words[i - 1]);
					appendSpace(result, totalSpace);
				} else {
					int perSpace = totalSpace / spaceSlots;
					int extraSpace = totalSpace % spaceSlots;
					if (i == totalWords) {
						for (int j = 0; j < spaceSlots; j++) {
							result.append(words[lastI + j]);
							appendSpace(result, perSpace);
						}
						appendSpace(result, extraSpace);
					} else {
						for (int j = 0; j < spaceSlots; j++) {
							result.append(words[lastI + j]);
							appendSpace(result, j < extraSpace ? perSpace + 1
									: perSpace);
						}
					}
				}
				results.add(result.toString());
				curLen = 0;
				lastI = i;
			} else {
				curLen += words[i].length();
			}
		}
		return results;
	}

	public static void appendSpace(StringBuffer result, int num) {
		for (int i = 0; i < num; i++) {
			result.append(" ");
		}
	}
}
