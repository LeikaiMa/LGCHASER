content_assist_autoactivation_triggers_java=.qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM
content_assist_disabled_computers=org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/><rhs name\="java.lang.String"/><rhs name\="java.lang.StringBuffer"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="findElementInMatrix.Coordinate"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.Hashtable"/><rhs name\="java.util.TreeMap"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.HashMap"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.concurrent.LinkedBlockingDeque"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.concurrent.LinkedBlockingDeque"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="test.ArrayList"><rhs name\="test.ArrayList"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/><rhs name\="java.lang.StringBuffer"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/><rhs name\="java.lang.StringBuffer"/></lhs><lhs name\="reorderList.ReorderList$ListNode"><rhs name\="reorderList.ReorderList$ListNode"/></lhs><lhs name\="reorderList.ListNode"><rhs name\="reorderList.ListNode"/></lhs><lhs name\="robotMovingBoard.Point"><rhs name\="robotMovingBoard.Point"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="createLinkedList.Node"><rhs name\="createLinkedList.Node"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.Hashtable"/><rhs name\="java.util.TreeMap"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.Dictionary"><rhs name\="java.util.Hashtable"/></lhs><lhs name\="java.util.Hashtable"><rhs name\="java.util.Hashtable"/></lhs><lhs name\="removeDuplicate.LinkedListNode"><rhs name\="removeDuplicate.LinkedListNode"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.concurrent.LinkedBlockingDeque"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="checkBalancedTree.TreeNode"><rhs name\="checkBalancedTree.TreeNode"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.AbstractSequentialList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.LinkedList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.lang.Enum"><rhs name\="route.RouteBetweenTwoNodes$State"/><rhs name\="validNumber.Automata$InputType"/></lhs><lhs name\="route.RouteBetweenTwoNodes$State"><rhs name\="route.RouteBetweenTwoNodes$State"/></lhs><lhs name\="stack.Node"><rhs name\="stack.Node"/></lhs><lhs name\="stackWithMin.NodeWithMin"><rhs name\="stackWithMin.NodeWithMin"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="stackSets.Stack"><rhs name\="stackSets.Stack"/></lhs><lhs name\="hanoi.Tower"><rhs name\="hanoi.Tower"/></lhs><lhs name\="binaryTreeInorderTraversal.TreeNode"><rhs name\="binaryTreeInorderTraversal.TreeNode"/></lhs><lhs name\="binaryTreeInorderTraversal.Iterative$TreeNodeVisited"><rhs name\="binaryTreeInorderTraversal.Iterative$TreeNodeVisited"/></lhs><lhs name\="findElementInMatrix.Coordinate"><rhs name\="findElementInMatrix.Coordinate"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.TreeSet"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.HashSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="sudoku.Sudoku$Coordinate"><rhs name\="sudoku.Sudoku$Coordinate"/></lhs><lhs name\="sudoku.BruteForce"><rhs name\="sudoku.BruteForce"/></lhs><lhs name\="rankOfNumber.RankNode"><rhs name\="rankOfNumber.RankNode"/></lhs><lhs name\="ticTacToe.Piece"><rhs name\="ticTacToe.Piece"/></lhs><lhs name\="java.util.NavigableMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.SortedMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.TreeMap"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.TreeMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="masterMind.MasterMind$Result"><rhs name\="masterMind.MasterMind$Result"/></lhs><lhs name\="buildBinaryTree.TreeNode"><rhs name\="buildBinaryTree.TreeNode"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.lang.Integer"/></lhs><lhs name\="rotateList.ListNode"><rhs name\="rotateList.ListNode"/></lhs><lhs name\="removeNthNodeEnd.ListNode"><rhs name\="removeNthNodeEnd.ListNode"/></lhs><lhs name\="addition.Forward$PartialSum"><rhs name\="addition.Forward$PartialSum"/></lhs><lhs name\="palindrome.Result"><rhs name\="palindrome.Result"/></lhs><lhs name\="addTwoNumbers.ListNode"><rhs name\="addTwoNumbers.ListNode"/></lhs><lhs name\="palindromePartitionI.DP$SubPalindrome"><rhs name\="palindromePartitionI.DP$SubPalindrome"/></lhs><lhs name\="java.util.NavigableSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.SortedSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.TreeSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="uniqueBSTII.TreeNode"><rhs name\="uniqueBSTII.TreeNode"/></lhs><lhs name\="twoSum.TwoSum$withIndex"><rhs name\="twoSum.TwoSum$withIndex"/></lhs><lhs name\="java.util.LinkedHashMap"><rhs name\="java.util.LinkedHashMap"/></lhs><lhs name\="testArrayList.ListNode"><rhs name\="testArrayList.ListNode"/></lhs><lhs name\="copyListWithRandomPointer.RandomListNode"><rhs name\="copyListWithRandomPointer.RandomListNode"/></lhs><lhs name\="maxDepth.TreeNode"><rhs name\="maxDepth.TreeNode"/></lhs><lhs name\="suffixTree.SuffixTreeNode"><rhs name\="suffixTree.SuffixTreeNode"/></lhs><lhs name\="bstToDoubleLinkedList.AdditionalDataStructure$NodePair"><rhs name\="bstToDoubleLinkedList.AdditionalDataStructure$NodePair"/></lhs><lhs name\="sortedArrayToBST.TreeNode"><rhs name\="sortedArrayToBST.TreeNode"/></lhs><lhs name\="mergeIntervals.Interval"><rhs name\="mergeIntervals.Interval"/></lhs><lhs name\="surroundedSquare.Subsquare"><rhs name\="surroundedSquare.Subsquare"/></lhs><lhs name\="surroundedSquare.SquareCell"><rhs name\="surroundedSquare.SquareCell"/></lhs><lhs name\="rectangleTrie.TrieNode"><rhs name\="rectangleTrie.TrieNode"/></lhs><lhs name\="rectangleTrie.Rectangle"><rhs name\="rectangleTrie.Rectangle"/></lhs><lhs name\="rectangleTrie.WordGroup"><rhs name\="rectangleTrie.WordGroup"/></lhs><lhs name\="rectangleTrie.Trie"><rhs name\="rectangleTrie.Trie"/></lhs><lhs name\="splitSentence.Question$Result"><rhs name\="splitSentence.Question$Result"/></lhs><lhs name\="lruCache.LRUCache"><rhs name\="lruCache.LRUCache"/></lhs><lhs name\="regularExpressionMatching.UseStack$starIndex"><rhs name\="regularExpressionMatching.UseStack$starIndex"/></lhs><lhs name\="regularExpressionMatching.UseStack"><rhs name\="regularExpressionMatching.UseStack"/></lhs><lhs name\="reverseGroup.ListNode"><rhs name\="reverseGroup.ListNode"/></lhs><lhs name\="cloneGraph.UndirectedGraphNode"><rhs name\="cloneGraph.UndirectedGraphNode"/></lhs><lhs name\="minPath.TreeNode"><rhs name\="minPath.TreeNode"/></lhs><lhs name\="binaryTreeMaxSum.TreeNode"><rhs name\="binaryTreeMaxSum.TreeNode"/></lhs><lhs name\="substringWithConcatenationOfAllWords.DPWithHashMap$Times"><rhs name\="substringWithConcatenationOfAllWords.DPWithHashMap$Times"/></lhs><lhs name\="mergeTwoSortedLists.ListNode"><rhs name\="mergeTwoSortedLists.ListNode"/></lhs><lhs name\="validNumber.Automata$InputType"><rhs name\="validNumber.Automata$InputType"/></lhs><lhs name\="maxPointsOnALine.Point"><rhs name\="maxPointsOnALine.Point"/></lhs><lhs name\="convertSortedListToBST.TreeNode"><rhs name\="convertSortedListToBST.TreeNode"/></lhs><lhs name\="convertSortedListToBST.ListOnly$Element"><rhs name\="convertSortedListToBST.ListOnly$Element"/></lhs><lhs name\="convertSortedListToBST.ListNode"><rhs name\="convertSortedListToBST.ListNode"/></lhs><lhs name\="sortList.ListNode"><rhs name\="sortList.ListNode"/></lhs><lhs name\="insertionSortList.ListNode"><rhs name\="insertionSortList.ListNode"/></lhs><lhs name\="mergeKSortedLists.ListNode"><rhs name\="mergeKSortedLists.ListNode"/></lhs><lhs name\="java.util.AbstractQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.PriorityQueue"><rhs name\="java.util.PriorityQueue"/></lhs></history>
content_assist_number_of_computers=21
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Monaco|11.0|0|COCOA|1|;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
