<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="sudoku.BruteForce.Coordinate"/>
<fullyQualifiedTypeName name="sudoku.BruteForce"/>
<fullyQualifiedTypeName name="java.awt.Checkbox"/>
<fullyQualifiedTypeName name="rankOfNumber.RankNode"/>
<fullyQualifiedTypeName name="javax.security.auth.kerberos.KerberosKey"/>
<fullyQualifiedTypeName name="ticTacToe.Piece"/>
<fullyQualifiedTypeName name="javax.lang.model.element.Element"/>
<fullyQualifiedTypeName name="javax.print.attribute.HashAttributeSet"/>
<fullyQualifiedTypeName name="java.security.KeyStore.Entry"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="mostWaterContainer.TreeMapSolution"/>
<fullyQualifiedTypeName name="java.util.TreeMap"/>
<fullyQualifiedTypeName name="java.io.StreamCorruptedException"/>
<fullyQualifiedTypeName name="masterMind.MasterMind.Result"/>
<fullyQualifiedTypeName name="javax.xml.stream.events.StartDocument"/>
<fullyQualifiedTypeName name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction"/>
<fullyQualifiedTypeName name="java.util.Hashtable"/>
<fullyQualifiedTypeName name="buildBinaryTree.TreeNode"/>
<fullyQualifiedTypeName name="rotateList.ListNode"/>
<fullyQualifiedTypeName name="java.lang.StringBuffer"/>
<fullyQualifiedTypeName name="java.awt.Point"/>
<fullyQualifiedTypeName name="atoi.AToI"/>
<fullyQualifiedTypeName name="preorderTraversal.TreeNode"/>
<fullyQualifiedTypeName name="removeNthNodeEnd.ListNode"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="swapNodePairs.ListNode"/>
<fullyQualifiedTypeName name="java.lang.NullPointerException"/>
<fullyQualifiedTypeName name="javax.swing.text.DefaultEditorKit.InsertBreakAction"/>
<fullyQualifiedTypeName name="addition.Forward.PartialSum"/>
<fullyQualifiedTypeName name="java.security.PublicKey"/>
<fullyQualifiedTypeName name="java.lang.StackOverflowError"/>
<fullyQualifiedTypeName name="removeDuplicate.LinkedListNode"/>
<fullyQualifiedTypeName name="palindrome.Result"/>
<fullyQualifiedTypeName name="linkedListCycleI.ListNode"/>
<fullyQualifiedTypeName name="linkedListCycleII.ListNode"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="javax.print.attribute.standard.Chromaticity"/>
<fullyQualifiedTypeName name="java.lang.Character"/>
<fullyQualifiedTypeName name="addTwoNumbers.ListNode"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.lang.reflect.Array"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="palindromePartitionI.DP.SubPalindrome"/>
<fullyQualifiedTypeName name="palindromePartitionI.DP"/>
<fullyQualifiedTypeName name="javax.swing.text.AbstractDocument.LeafElement"/>
<fullyQualifiedTypeName name="java.util.IllegalFormatCodePointException"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.omg.CORBA.INTERNAL"/>
<fullyQualifiedTypeName name="java.util.TreeSet"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.util.SortedSet"/>
<fullyQualifiedTypeName name="distinctSubsequences.DPSolution"/>
<fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.lang.UnknownError"/>
<fullyQualifiedTypeName name="distinctSubsequences.OnePassDP"/>
<fullyQualifiedTypeName name="java.lang.String"/>
</qualifiedTypeNameHistroy>
